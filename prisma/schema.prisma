// This is your Prisma schema file,
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @map("_id")
  name        String
  email       String @unique
  description String @default("Sem biografia")
  imageUrl    String
  role        String @default("user")

  servers  Server[]
  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
}

model Server {
  id String @id @map("_id")

  name       String
  imageUrl   String
  inviteCode String @unique

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @map("_id")

  role MemberRole @default(GUEST)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id String @id @map("_id")

  name String
  type ChannelType @default(TEXT)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([serverId])
}
